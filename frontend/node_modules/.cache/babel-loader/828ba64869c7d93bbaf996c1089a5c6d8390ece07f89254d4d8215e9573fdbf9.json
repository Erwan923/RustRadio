{"ast":null,"code":"var _jsxFileName = \"/home/r3v4n/github-projects/rustradio/frontend/src/components/Dashboard/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Box, List, ListItem, ListItemText } from '@mui/material';\nimport logo from '../../logo.png';\nimport { getContainers } from '../../services/containerService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [containers, setContainers] = useState([]);\n  useEffect(() => {\n    getContainers().then(setContainers);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        textAlign: 'center',\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Rust Radio Logo\",\n        style: {\n          width: '150px',\n          marginBottom: '16px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Rust Radio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        color: \"text.secondary\",\n        children: \"Votre bo\\xEEte \\xE0 outils pour l'analyse de signaux radio.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Containers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: containers.map(container => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: container.name,\n          secondary: container.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, container.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Bienvenue sur le tableau de bord de Rust Radio. Utilisez le menu de gauche pour naviguer entre les diff\\xE9rentes fonctionnalit\\xE9s.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"nXRo0eee2q81RtG8PmQ2Y9fBQ6k=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Box","List","ListItem","ListItemText","logo","getContainers","jsxDEV","_jsxDEV","Dashboard","_s","containers","setContainers","then","maxWidth","sx","mt","mb","children","display","flexDirection","alignItems","justifyContent","textAlign","src","alt","style","width","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","gutterBottom","color","map","container","primary","name","secondary","id","_c","$RefreshReg$"],"sources":["/home/r3v4n/github-projects/rustradio/frontend/src/components/Dashboard/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Container,\n  Typography,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n} from '@mui/material';\nimport logo from '../../logo.png';\nimport { getContainers, Container as ContainerType } from '../../services/containerService';\n\nconst Dashboard = () => {\n  const [containers, setContainers] = useState<ContainerType[]>([]);\n\n  useEffect(() => {\n    getContainers().then(setContainers);\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          textAlign: 'center',\n          mb: 4,\n        }}\n      >\n        <img src={logo} alt=\"Rust Radio Logo\" style={{ width: '150px', marginBottom: '16px' }} />\n        <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n          Rust Radio\n        </Typography>\n        <Typography variant=\"h5\" color=\"text.secondary\">\n          Votre boîte à outils pour l'analyse de signaux radio.\n        </Typography>\n      </Box>\n\n      <Typography variant=\"h6\" gutterBottom>\n        Containers\n      </Typography>\n      <List>\n        {containers.map((container) => (\n          <ListItem key={container.id}>\n            <ListItemText primary={container.name} secondary={container.id} />\n          </ListItem>\n        ))}\n      </List>\n\n      <Typography variant=\"body1\">\n        Bienvenue sur le tableau de bord de Rust Radio. Utilisez le menu de gauche pour naviguer entre les différentes fonctionnalités.\n      </Typography>\n    </Container>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}