{"ast":null,"code":"var _jsxFileName = \"/home/r3v4n/github-projects/rustradio/frontend/src/contexts/ThemeContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useMemo } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/material/styles';\nimport { CssBaseline } from '@mui/material';\nimport { lightTheme, darkTheme } from '../themes/theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext({\n  toggleTheme: () => {}\n});\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState('light');\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  const activeTheme = useMemo(() => {\n    return theme === 'light' ? lightTheme : darkTheme;\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      toggleTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: activeTheme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"xoWJQ4lmSe5IPahc4GKQ40ergHY=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useMemo","ThemeProvider","MuiThemeProvider","CssBaseline","lightTheme","darkTheme","jsxDEV","_jsxDEV","ThemeContext","toggleTheme","children","_s","theme","setTheme","prevTheme","activeTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/r3v4n/github-projects/rustradio/frontend/src/contexts/ThemeContext.tsx"],"sourcesContent":["\nimport React, { createContext, useState, useMemo } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/material/styles';\nimport { CssBaseline } from '@mui/material';\nimport { lightTheme, darkTheme } from '../themes/theme';\n\nexport const ThemeContext = createContext({\n  toggleTheme: () => {},\n});\n\nexport const ThemeProvider: React.FC<React.PropsWithChildren> = ({ children }) => {\n  const [theme, setTheme] = useState('light');\n\n  const toggleTheme = () => {\n    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\n  };\n\n  const activeTheme = useMemo(() => {\n    return theme === 'light' ? lightTheme : darkTheme;\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ toggleTheme }}>\n      <MuiThemeProvider theme={activeTheme}>\n        <CssBaseline />\n        {children}\n      </MuiThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAC/D,SAASC,aAAa,IAAIC,gBAAgB,QAAQ,sBAAsB;AACxE,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,UAAU,EAAEC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,OAAO,MAAMC,YAAY,gBAAGV,aAAa,CAAC;EACxCW,WAAW,EAAEA,CAAA,KAAM,CAAC;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMR,aAAgD,GAAGA,CAAC;EAAES;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,OAAO,CAAC;EAE3C,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBI,QAAQ,CAAEC,SAAS,IAAMA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACrE,CAAC;EAED,MAAMC,WAAW,GAAGf,OAAO,CAAC,MAAM;IAChC,OAAOY,KAAK,KAAK,OAAO,GAAGR,UAAU,GAAGC,SAAS;EACnD,CAAC,EAAE,CAACO,KAAK,CAAC,CAAC;EAEX,oBACEL,OAAA,CAACC,YAAY,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAER;IAAY,CAAE;IAAAC,QAAA,eAC5CH,OAAA,CAACL,gBAAgB;MAACU,KAAK,EAAEG,WAAY;MAAAL,QAAA,gBACnCH,OAAA,CAACJ,WAAW;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACdX,QAAQ;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAE5B,CAAC;AAACV,EAAA,CAnBWV,aAAgD;AAAAqB,EAAA,GAAhDrB,aAAgD;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}